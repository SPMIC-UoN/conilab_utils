#!/bin/sh

#   tbss_2_reg - TBSS nonlinear registration
#
#   Stephen Smith, FMRIB Image Analysis Group
#
#   Copyright (C) 2005-2008 University of Oxford
#
#   SHCOPYRIGHT

Usage() {
    cat <<EOF

Usage: tbss_2_reg [options]

Target-selection options - choose ONE of:
 -T            : use FMRIB58_FA_1mm as target for nonlinear registrations (recommended)
 -t <target>   : use <target> image as target for nonlinear registrations
 -n            : find best target from all images in FA

EOF
    exit 1
}

do_reg(){

    f=$1

    for g in `$FSLDIR/bin/imglob *_FA.*` ; do
        	
	o=${g}_to_$f
	
	if [ ! -f ${o}_warp.msf ] ; then
	    echo $o
	    touch ${o}_warp.msf
            if [ -d ../user_mask ] 
            then
              mfname=`echo ../user_mask/$g | sed 's/\(.*\)_FA/\1_mask_clean_inclusive/g'`
              echo "$FSLDIR/bin/fsl_reg $g $f ${g}_to_${f} -e -FA -flirt \"-inweight $mfname\" -fnirt \"--inmask=$mfname\"" >> .commands
            else
	      echo "$FSLDIR/bin/fsl_reg $g $f ${g}_to_$f -e -FA" >> .commands
            fi
	fi
	
    done
}

[ "$1" = "" ] && Usage

echo [`date`] [`hostname`] [`uname -a`] [`pwd`] [$0 $@] >> .tbsslog

#
# For initial attempts with structural scans and masks
# we disallow combining them with -t or -n options. This
# _might_ change if we find it useful.
#

if [ $1 = -n -o $1 = -t ] && [ -d struct -o -d user_mask ]
then
  echo $0: $1: invalid option together with -s or -m for tbss_1_preproc >&2
  exit 1
fi

if [ ! -d struct ]  # If we have no structs it is similar to before
then
  /bin/rm -f FA/.commands
  if [ $1 = -n ] ; then
    cd FA
    for f in `$FSLDIR/bin/imglob *_FA.*` ; do
      do_reg $f
    done
  else
    if [ $1 = -T ] ; then
      TARGET=$FSLDIR/data/standard/FMRIB58_FA_1mm
    elif [ $1 = -t ] ; then
      TARGET=$2
    else
      Usage
    fi
    if [ `${FSLDIR}/bin/imtest $TARGET` = 0 ] ; then
      echo ""
      echo "Error: target image $TARGET not valid"
      Usage
    fi
    $FSLDIR/bin/imcp $TARGET FA/target
    cd FA
    do_reg target
  fi
  ${FSLDIR}/bin/fsl_sub -l tbss_logs -T 60 -N tbss_2_reg -t .commands
else
  /bin/rm -f FA/.reg_commands_subject_*
  mkdir -p reg
  $FSLDIR/bin/imcp $FSLDIR/data/standard/FMRIB58_FA_1mm FA/target
  cd FA
  cnt=1
  T1ref=$FSLDIR/data/standard/MNI152_T1_2mm
  for f in `$FSLDIR/bin/imglob *_FA.*`
  do
    echo "#!/bin/sh" >> .reg_commands_subject_$cnt
    echo "#" >> .reg_commands_subject_$cnt
    echo "# Script autogenerated by tbss" >> .reg_commands_subject_$cnt
    echo "#" >> .reg_commands_subject_$cnt
    T1in=`echo ../struct/$f | sed 's/\(.*\)_FA/\1_struct/'`
    if [ ! -d ../user_mask ]
    then
      echo "$FSLDIR/bin/flirt -ref ${T1ref}_brain -in ${T1in}_betted -omat ../reg/`basename ${T1in}`_2_mni152.mat" >> .reg_commands_subject_$cnt 
      echo "$FSLDIR/bin/fnirt --ref=$T1ref --in=$T1in --aff=../reg/`basename ${T1in}`_2_mni152.mat --config=T1_2_MNI152_2mm --cout=../reg/`basename ${T1in}`_2_mni152_coef" >> .reg_commands_subject_$cnt
      echo "$FSLDIR/bin/flirt -ref ${T1in}_betted -in $f -omat ../reg/`basename ${f}`_2_struct.mat" >> .reg_commands_subject_$cnt
      echo "$FSLDIR/bin/convertwarp --ref=target --warp1=../reg/`basename ${T1in}`_2_mni152_coef --premat=../reg/`basename ${f}`_2_struct.mat --out=../reg/init_`basename ${f}`_2_fmrib58_warps" >> .reg_commands_subject_$cnt
      echo "$FSLDIR/bin/fnirt --ref=target --in=$f --inwarp=init_`basename ${f}`_2_fmrib58_warps --config=FA_2_FMRIB58_1mm.cnf --cout=${f}_to_target_warp" >> .reg_commands_subject_$cnt
    else
      mask=`echo ../user_mask/$f | sed 's/\(.*\)_FA/\1_mask_clean_inclusive/'`
      echo "$FSLDIR/bin/flirt -ref ${T1ref}_brain -in ${T1in}_betted -inweight $mask -omat ../reg/`basename ${T1in}`_2_mni152.mat" >> .reg_commands_subject_$cnt 
      echo "$FSLDIR/bin/fnirt --ref=$T1ref --in=$T1in --aff=../reg/`basename ${T1in}`_2_mni152.mat --inmask=$mask --config=T1_2_MNI152_2mm --cout=../reg/`basename ${T1in}`_2_mni152_coef" >> .reg_commands_subject_$cnt
      echo "$FSLDIR/bin/flirt -ref ${T1in}_betted -in $f -omat ../reg/`basename ${f}`_2_struct.mat" >> .reg_commands_subject_$cnt
      echo "$FSLDIR/bin/convert_xfm -omat ../reg/struct_2_`basename ${f}`.mat -inverse ../reg/`basename ${f}`_2_struct.mat" >> .reg_commands_subject_$cnt
      echo "$FSLDIR/bin/applywarp --ref=$f --in=$mask --premat=../reg/struct_2_`basename ${f}`.mat --interp=nn --out=${mask}_in_FA_space" >> .reg_commands_subject_$cnt
      echo "$FSLDIR/bin/convertwarp --ref=target --warp1=../reg/`basename ${T1in}`_2_mni152_coef --premat=../reg/`basename ${f}`_2_struct.mat --out=../reg/init_`basename ${f}`_2_fmrib58_warps" >> .reg_commands_subject_$cnt
      echo "$FSLDIR/bin/fnirt --ref=target --in=$f --inwarp=../reg/init_`basename ${f}`_2_fmrib58_warps --inmask=${mask}_in_FA_space --config=FA_2_FMRIB58_1mm.cnf --cout=${f}_to_target_warp" >> .reg_commands_subject_$cnt
    fi
    chmod +x .reg_commands_subject_$cnt
    ${FSLDIR}/bin/fsl_sub -l tbss_logs -T 60 -N tbss_2_reg_subj_$cnt ./.reg_commands_subject_$cnt
    cnt=$((cnt + 1))
  done
fi


